file_name2 <- ""
file_name2 <- paste(file_name, i, ".csv", sep = "")
#  file_name <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
}
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name, i, ".csv", sep = "")
#  file_name <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
}
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
#  file_name <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
}
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
#  file_name3 <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
print(file_name3)
}
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
print(file_name3)
}
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
#  print(file_name2)
#  print(file_name3)
}
View(file_name3)
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
#  file_name3 <- read.table(file_name2, header = T, sep = ",")
print(file_name2)
print(file_name3)
}
str(file_name3)
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
#  print(file_name2)
#  print(file_name3)
}
str(file_name3)
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
#  file_name3 <- ""
#  file_name3 <- paste(file_name1, i, sep = "")
paste(file_name1, i, sep = "") <- read.table(file_name2, header = T, sep = ",")
#  print(file_name2)
#  print(file_name3)
}
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
#  file_name3 <- ""
#  file_name3 <- paste(file_name1, i, sep = "")
paste(file_name1, i, sep = "") = read.table(file_name2, header = T, sep = ",")
#  print(file_name2)
#  print(file_name3)
}
SOP_201701 <- read.table("201701_SOP.csv", header = T, sep = ",")
SOP_201702 <- read.table("201702_SOP.csv", header = T, sep = ",")
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
#  print(file_name2)
#  print(file_name3)
}
library(plyr)
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
library(plyr)
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
file_list <- rbind.fill(file_list, file_name3)
#  print(file_name2)
#  print(file_name3)
}
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
library(plyr)
file_list
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
file_list <- rbind.fill(file_list, file_name3)
#  print(file_name2)
#  print(file_name3)
}
rm(list = ls())
library(plyr)
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
file_list <- rbind.fill(file_list, file_name3)
#  print(file_name2)
#  print(file_name3)
}
str(file_list)
SOP_201701 <- read.table("201701_SOP.csv", header = T, sep = ",")
SOP_201702 <- read.table("201702_SOP.csv", header = T, sep = ",")
View(file_list)
rm(list = ls())
library(plyr)
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed", file_name3))
}
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
library(plyr)
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:2){
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed", file_name2))
}
## temp를 자동화
# function과 for문 통해서
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
library(plyr)
#### 1. csv 파일 읽어들이기: data.frame 구조
# csv 파일 읽어들일 때 구분자(,)가 본문에 포함되어 있는지, 특수기호(', ", #) 있는지 사전에 체크 후 제거해줘야 한다.
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:12){
# csv 파일명
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
# csv 파일변수
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
# 최종 데이터프레임
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed to read", file_name2))
}
## temp를 자동화
# function과 for문 통해서
# function(..., sep = " ", collapse = null)
#### 0. 초기화
rm(list = ls())
library(plyr)
#### 1. csv 파일 읽어들이기: data.frame 구조
# csv 파일 읽어들일 때 구분자(,)가 본문에 포함되어 있는지, 특수기호(', ", #) 있는지 사전에 체크 후 제거해줘야 한다.
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:12){
# csv 파일명
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
# csv 파일변수
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
# 최종 데이터프레임
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed to read", file_name2))
}
View(file_list)
#### 2. N/A값 제거, 불필요한 컬럼 제거
is.na(file_list)
#### 2. N/A값 제거, 불필요한 컬럼 제거
# is.na(file_list)
colSums(is.na(file_list))
file_list[is.na(file_list)] <- 0
#### 2. N/A값 제거, 불필요한 컬럼 제거
# is.na(file_list)
colSums(is.na(file_list))
# NA가 없는 컬럼만
file_list_1 <- file_list[, !colSums(file_list) == 0 ]
#View(file_list)
str(file_list)
# 데이터프레임에 NA값 있는지 확인
colSums(is.na(file_list))
# 데이터프레임에 NA값 있는지 확인
colSums(file_list) == 0
is.numeric(file_list)
is.numeric(file_list[1,])
# 데이터프레임에 NA값 있는지 확인
colSums(file_list) == 0
x <- cbind(x1 = 3 + 2i, x2 = c(4:1, 2:5) - 5i)
x[3, ] <- NA; x[4, 2] <- NA
x
str(x)
colSums(x);
colSums(file_list)
rm(list = ls())
library(plyr)
#### 1. csv 파일 읽어들이기: data.frame 구조
# csv 파일 읽어들일 때 구분자(,)가 본문에 포함되어 있는지, 특수기호(', ", #) 있는지 사전에 체크 후 제거해줘야 한다.
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:12){
# csv 파일명
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
# csv 파일변수
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
# 최종 데이터프레임
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed to read", file_name2))
}
# 데이터프레임에 NA값 있는지 확인
colSums(file_list)
# 데이터프레임에 NA값 있는지 확인
colSums(file_list);
file_list_1 <- file_list[, !colSums(file_list) == NA ]
#View(file_list)
str(file_list)
# 데이터프레임에 NA값 있는지 확인
is.logical(file_list)
# 데이터프레임에 NA값 있는지 확인
is.na(file_list)
# 데이터프레임에 NA값 있는지 확인
sum(is.na(file_list))
# 데이터프레임에 NA값 있는지 확인
colSums(is.na(file_list))
# NA가 없는 컬럼만
file_list_1 <- file_list[, !colSums(is.na(file_list)) == 1832]
str(file_list_1)
# 데이터프레임에 NA값 있는지 확인
colSums(is.na(file_list))
# NA가 없는 컬럼만
file_list_1 <- file_list[, !colSums(is.na(file_list)) == 1832]
# NA가 없는 컬럼만
file_list_1 <- file_list[, !colSums(is.na(file_list)) = 1832]
# NA가 없는 컬럼만
file_list_1 <- file_list[, colSums(is.na(file_list)) < 1832]
# 데이터프레임에 NA값 있는지 확인
colSums(is.na(file_list_1))
#### 2. N/A값 제거, 불필요한 컬럼 제거
# 데이터프레임에 NA값 있는지 확인
colSums(is.na(file_list_1))
nrow(file_list)
total_cnt <- nrow(file_list)
total_cnt
rm(list = ls())
library(plyr)
#### 1. csv 파일 읽어들이기: data.frame 구조
# csv 파일 읽어들일 때 구분자(,)가 본문에 포함되어 있는지, 특수기호(', ", #) 있는지 사전에 체크 후 제거해줘야 한다.
file_list <- data.frame()
file_name1 <- "2017_"
for(i in 1:12){
# csv 파일명
file_name2 <- ""
file_name2 <- paste(file_name1, i, ".csv", sep = "")
# csv 파일변수
file_name3 <- ""
file_name3 <- paste(file_name1, i, sep = "")
file_name3 <- read.table(file_name2, header = T, sep = ",")
# 최종 데이터프레임
file_list <- rbind.fill(file_list, file_name3)
print(paste("succeed to read", file_name2))
}
#View(file_list)
#str(file_list)
#### 2. 불필요한 컬럼 제거
# 데이터 총건수
total_cnt <- nrow(file_list)
# 컬럼 전체가 NA인 것은 제외한다
file_list <- file_list[, colSums(is.na(file_list)) < total_cnt]
str(file_list_1)
str(file_list)
file_list[,file_list$제목] <- as.character(file_list[,file_list$제목])
file_list[,file_list$조치내역] <- as.character(file_list[,file_list$조치내역])
file_list[,제목] <- as.character(file_list[,제목])
file_list[,조치내역] <- as.character(file_list[,조치내역])
as.character(file_list[, c(제목)])
as.character(file_list[, "제목"])
# 텍스트분석을 위해 특정컬럼은 factor -> char로 변환
file_list[,"제목"] <- as.character(file_list[,"제목"])
file_list[,"조치내역"] <- as.character(file_list[,"조치내역"])
str(file_list)
#### 4. 결과값 보기
summary(file_list)
str(file_list)
is.factor(file_list)
file_list.factor <- file_list[, is.factor(file_list) == TRUE]
str(file_list.factor)
View(file_list.factor)
rm(file_list.factor)
colsums(is.factor(file_list))
colSums(is.factor(file_list))
colSums(is.int(file_list))
colSums(is.integer(file_list))
colSums(is.na(file_list))
colSums(is.character(file_list))
is.na(file_list)
is.character(file_list)
is.character(file_list[,])
is.character(file_list[1,])
ncol(file_list)
# 컬럼 갯수
total_col_cnt <- ncol(file_list)
total_col_cnt
for(j in 1:2){
col_type <- is.factor(file_list$j)
print(paste("succeed to sub", col_type))
}
list.dirs()
list.files('.', pattern = '.csv')
rm(total_col_cnt)
str(file_list)
file_list_factor <- data.frame()
file_list_character <- data.frame()
file_list_integer <- data.frame()
for(j in 1:2){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list$j) == TRUE)
file_list_factor <- cbind(file_list[, j])
print("cbind factors")
if(is.character(file_list$j) == TRUE)
file_list_character <- cbind(file_list[, j])
print("cbind characters")
if(is.integer(file_list$j) == TRUE)
file_list_integer <- cbind(file_list[, j])
print("cbind integers")
}
is.factor(file_list$j)
total_col_cnt <- ncol(file_list)
file_list_factor <- data.frame()
file_list_character <- data.frame()
file_list_integer <- data.frame()
for(j in 1:total_col_cnt){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list$j) == TRUE)
file_list_factor <- cbind(file_list[, j])
else  print("not factors")
if(is.character(file_list$j) == TRUE)
file_list_character <- cbind(file_list[, j])
else  print("not characters")
if(is.integer(file_list$j) == TRUE)
file_list_integer <- cbind(file_list[, j])
else  print("not integers")
}
file_list_factor <- cbind(file_list[, 1])
file_list_factor <- cbind(file_list[, 2])
is.integer(file_list$j)
is.integer(file_list$1)
is.integer(file_list$1)
is.factor(file_list$12)
j
is.factor(file_list$j)
is.factor(file_list$1)
j=1
is.factor(file_list$j)
str(file_list)
is.factor(file_list[,1])
j=1
is.factor(file_list[,1])
total_col_cnt <- ncol(file_list)
file_list_factor <- data.frame()
file_list_character <- data.frame()
file_list_integer <- data.frame()
for(j in 1:total_col_cnt){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list[,j]) == TRUE)
file_list_factor <- cbind(file_list[, j])
else  print("not factors")
if(is.character(file_list[,j]) == TRUE)
file_list_character <- cbind(file_list[, j])
else  print("not characters")
if(is.integer(file_list[,j]) == TRUE)
file_list_integer <- cbind(file_list[, j])
else  print("not integers")
}
View(file_list_factor)
View(file_list_character)
head(file_list_character)
file_list_factor <- data.frame()
file_list_character <- data.frame()
file_list_integer <- data.frame()
for(j in 1:total_col_cnt){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list[,j]) == TRUE)
file_list_factor <- cbind(file_list_factor, file_list[, j])
else  print("not factors")
if(is.character(file_list[,j]) == TRUE)
file_list_character <- cbind(file_list_character, file_list[, j])
else  print("not characters")
if(is.integer(file_list[,j]) == TRUE)
file_list_integer <- cbind(file_list_integer, file_list[, j])
else  print("not integers")
}
total_row_cnt <- nrow(file_list)
total_row_cnt
file_list_factor <- data.frame(1:total_row_cnt,1)
file_list_character <- data.frame(1:total_row_cnt,1)
file_list_integer <- data.frame(1:total_row_cnt,1)
for(j in 1:total_col_cnt){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list[,j]) == TRUE)
file_list_factor <- cbind(file_list_factor, file_list[, j])
else  print("not factors")
if(is.character(file_list[,j]) == TRUE)
file_list_character <- cbind(file_list_character, file_list[, j])
else  print("not characters")
if(is.integer(file_list[,j]) == TRUE)
file_list_integer <- cbind(file_list_integer, file_list[, j])
else  print("not integers")
}
head(file_list_character)
View(file_list_character)
file_list_factor <- c(1:total_row_cnt,1)
file_list_character <- c(1:total_row_cnt,1)
file_list_integer <- c(1:total_row_cnt,1)
for(j in 1:total_col_cnt){
#   col_type <- is.factor(file_list$j)
if(is.factor(file_list[,j]) == TRUE)
file_list_factor <- cbind(file_list_factor, file_list[, j])
else  print("not factors")
if(is.character(file_list[,j]) == TRUE)
file_list_character <- cbind(file_list_character, file_list[, j])
else  print("not characters")
if(is.integer(file_list[,j]) == TRUE)
file_list_integer <- cbind(file_list_integer, file_list[, j])
else  print("not integers")
}
View(file_list_character)
View(file_list_factor)
View(file_list_integer)
str(file_list_integer)
str(file_list_character)
str(file_list_factor)
names(file_list)
names(file_list[,1])
names(file_list[,2])
names(file_list(1))
names(file_list,1()
names(file_list,1)
names(file_list,1)
names(file_list(1))
library(reshape2)
